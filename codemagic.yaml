workflows:
  android-workflow:
    name: Android Workflow
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      groups:
        - google_credentials # <-- (Includes GCLOUD_KEY_FILE, GOOGLE_CREDENTIALS)
      vars:
        FIREBASE_PROJECT: "fe-community-dev"
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up debug.keystore
        script: |
          rm -f ~/.android/debug.keystore
          keytool -genkeypair -alias androiddebugkey -keypass android -keystore ~/.android/debug.keystore -storepass android -dname 'CN=Android Debug,O=Android,C=US' -keyalg 'RSA' -keysize 2048 -validity 10000
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Build APK with Flutter
        script: |
          flutter build apk --debug
      - name: Create debug and test APK
        script: |
          set -ex
          cd android
          ./gradlew app:assembleAndroidTest
          ./gradlew app:assembleDebug -Ptarget="$CM_BUILD_DIR/integration_test/app_test.dart"
      - name: Run Firebase Test Lab tests
        script: |
          set -ex

          echo $GCLOUD_KEY_FILE | base64 --decode > ./gcloud_key_file.json

          gcloud auth activate-service-account --key-file=gcloud_key_file.json

          gcloud --quiet config set project $FIREBASE_PROJECT

          gcloud firebase test android run \
            --type instrumentation \
            --app build/app/outputs/apk/debug/app-debug.apk \
            --test build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
            --timeout 3m
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
  ios-workflow:
    name: iOS Workflow
    instance_type: mac_mini_m1
    environment:
      xcode: 13.4.1
      groups:
        - gcloud_credentials
      vars:
        FIREBASE_PROJECT: "fe-community-dev"
        BUNDLE_ID: "dev.flutterexplained.cicdtutorial"
        TEST_BUNDLE_ID: "dev.flutterexplained.cicdtutorial.uitests.xctrunner"
    scripts:
      - name: Configure Firebase access
        script: |
          set -e
          echo $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS > ./gcloud_key_file.json          
          gcloud auth activate-service-account --key-file=gcloud_key_file.json
          gcloud --quiet config set project $FIREBASE_PROJECT

      - keychain initialize
      - app-store-connect fetch-signing-files ${BUNDLE_ID} --create
      - app-store-connect fetch-signing-files ${TEST_BUNDLE_ID} --create
      - keychain add-certificates
      - xcode-project use-profiles --code-signing-setup-verbose-logging

      - name: Build app for testing
        script: |
          set -ex
          
          flutter build ios integration_test/app_test.dart --release
          
          cd ios
          xcodebuild \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -config Flutter/Release.xcconfig \
            -derivedDataPath "../build/ios_integ" \
            -sdk iphoneos \
            build-for-testing
      - name: Package tests bundle
        script: |
          set -ex
          cd ./build/ios_integ/Build/Products
          zip -r "ios_tests.zip" *-iphoneos *.xctestrun
      - name: Run tests in Firebase Test Lab
        script: gcloud firebase test ios run --test "build/ios_integ/Build/Products/ios_tests.zip"
    artifacts:
      - "**/ios_tests.zip"